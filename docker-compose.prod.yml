# =============================================================================
# DOCKER COMPOSE PRODUCTION - NEXUS RÉUSSITE
# =============================================================================
# Utilisez ce fichier pour déployer en production

version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: nexus-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nexus_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-nexus_reussite_prod}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - nexus-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nexus_user}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Application Next.js (Mode Standalone)
  nexus-app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: nexus-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-nexus_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-nexus_reussite_prod}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nexus-network
    volumes:
      # Monter les uploads et données persistantes
      - uploads_data:/app/uploads
      - logs_data:/app/logs

  # Reverse Proxy Nginx (Optionnel)
  nginx:
    image: nginx:alpine
    container_name: nexus-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs_data:/var/log/nginx
    depends_on:
      - nexus-app
    networks:
      - nexus-network

volumes:
  postgres_data_prod:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  nexus-network:
    driver: bridge

name: E2E Premium Suites

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-stub:
    name: E2E Stub (blocking)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Install poppler-utils (pdfinfo)
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Run unit/integration coverage (thresholds enforced)
        run: npm run test:coverage

      - name: Generate stub PDFs
        run: npm run gen:stub-pdfs

      - name: Run Playwright E2E (stub acceptance suite)
        env:
          CI: '1'
          E2E: '1'
          PDF_RENDERER_FORCE: 'react'
          STORAGE_PROVIDER: 'file'
          RAG_OCR_ENABLED: '1'
          E2E_BASE_URL: 'http://localhost:3003'
        run: |
          npx playwright install --with-deps chromium
          npx playwright test \
            e2e/aria.sse.spec.ts \
            e2e/crawl-public.spec.ts \
            e2e/buttons-dashboards.spec.ts \
            e2e/site-content-v2.spec.ts \
            e2e/bilan.premium.spec.ts \
            --project=chromium

      - name: Append pdfinfo to job summary
        if: always()
        run: |
          echo "### pdfinfo — parent" >> $GITHUB_STEP_SUMMARY
          pdfinfo public/files/bilan-parent-stub.pdf >> $GITHUB_STEP_SUMMARY || true
          echo "\n### pdfinfo — eleve" >> $GITHUB_STEP_SUMMARY
          pdfinfo public/files/bilan-eleve-stub.pdf >> $GITHUB_STEP_SUMMARY || true

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-stub
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload test results (traces)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-stub
          path: test-results
          if-no-files-found: ignore

      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-e2e-stub
          path: junit-e2e.xml
          if-no-files-found: ignore

  e2e-real:
    name: E2E Real (allow_failure)
    runs-on: ubuntu-latest
    needs: e2e-stub
    continue-on-error: true
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: nexus_dev
        ports:
          - "5433:5432"
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Install poppler-utils (pdfinfo)
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Run Playwright E2E (real)
        env:
          CI: '1'
          E2E_BASE_URL: 'http://localhost:3003'
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/nexus_dev?schema=public
          PDF_RENDERER_FORCE: ''
          RAG_OCR_ENABLED: '0'
        run: |
          npx playwright install --with-deps chromium
          npx playwright test e2e/bilan.premium.spec.ts --project=chromium

      - name: Upload Playwright HTML report (real)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-real
          path: playwright-report
          if-no-files-found: ignore

